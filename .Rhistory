library("devtools", lib.loc="~/R/win-library/3.5")
devtools::install_github("crsh/papaja")
> devtools::install_github("crsh/papaja")
> > devtools::install_github("crsh/papaja")
library("devtools", lib.loc="~/R/win-library/3.5")
> > devtools::install_github("crsh/papaja")
devtools::install_github("crsh/papaja")
> > devtools::install_github("crsh/papaja") force=TRUE
> > devtools::install_github("crsh/papaja")force(TRUE)
> > devtools::install_github("crsh/papaja")
> > devtools::install_github("crsh/papaja")force=TRUE
library("devtools", lib.loc="~/R/win-library/3.5")
> > devtools::install_github("crsh/papaja")
devtools::install_github("crsh/papaja")
devtools::install_github("crsh/papaja")force=TRUE
devtools::install_github("crsh/papaja")force(TRUE)
library("devtools", lib.loc="~/R/win-library/3.5")
devtools::install_github("crsh/papaja")
library("devtools", lib.loc="~/R/win-library/3.5")
library("papaja", lib.loc="~/R/win-library/3.5")
library(readxl)
Armor_Replication_UOandUVTdata <- read_excel("C:/Users/zocra/Downloads/Armor_Replication.UOandUVTdata.csv")
View(Armor_Replication_UOandUVTdata)
library(readxl)
Armor_Replication_UOandUVTdata <- read_excel("C:/Users/zocra/Downloads/Armor_Replication.UOandUVTdata.xls")
View(Armor_Replication_UOandUVTdata)
View(Armor_Replication_UOandUVTdata)
View(Armor_Replication_UOandUVTdata)
library(readxl)
Armor_Replication_UOandUVTdata <- read_excel("C:/Users/zocra/Downloads/Armor_Replication.UOandUVTdata.xls",
sheet = "Armor Replication.UOandUVTdata")
View(Armor_Replication_UOandUVTdata)
View(Armor_Replication_UOandUVTdata)
View(Armor_Replication_UOandUVTdata)
library("papaja")
library(data.table)
all_data <- fread("https://raw.githubusercontent.com/CrumpLab/statisticsLab/master/data/MehrSongSpelke2016.csv")
View(all_data)
View(all_data)
library(summarytools)
install.packages("summarytools")
library(summarytools)
install.packages("glue")
library(summarytools)
library(glue)
install.packages("glue")
library(glue)
library(summarytools)
library(summarytools)
View(Armor_Replication_UOandUVTdata)
library("papaja")
library(summarytools)
install.packages("glue")
library(glue)
library(summarytools)
view(dfSummary(all_data))
library(data.table)
all_data <- fread("https://raw.githubusercontent.com/CrumpLab/statisticsLab/master/data/MehrSongSpelke2016.csv")
library(summarytools)
view(dfSummary(all_data))
a<-c(1,2,3,4,5)
hist(a)
a<-c(1,2,3,4,5)
hist(a)
a<-c(1,2,3,4,5)
hist(a)
a<-c(1,2,3,4,5)
hist(a)
a<-rnorm(100,0,1)
hist(a)
a<-rnorm(100,0,1)
hist(a)
a<-rnorm(100,0,1)
hist(a)
a<-rnorm(100,0,1)
hist(a)
a<-rnorm(100,0,1)
hist(a)
install.packages("pwr")
library(pwr)
pwr.t.test(n=10,
d=1,
sig.level = .05,
type = "two.sample",
alternative = "two.sided")
library(pwr)
pwr.t.test(n=100,
d=1,
sig.level = .05,
type = "two.sample",
alternative = "two.sided")
library(pwr)
pwr.t.test(n=90,
d=.8,
sig.level = .05,
type = "two.sample",
alternative = "two.sided")
library(pwr)
pwr.t.test(n=40,
d=.8,
sig.level = .05,
type = "two.sample",
alternative = "two.sided")
library(pwr)
pwr.t.test(n=44,
d=.8,
sig.level = .05,
type = "two.sample",
alternative = "two.sided")
a<-c(1,2,3)
sapply(a, FUN=function(x)
return(x+1)
})
library("papaja")
library(pwr)
pwr.t.test(n=44,
d=.8,
sig.level = .05,
type = "two.sample",
alternative = "two.sided")
library("papaja")
hist(baseline)
plot(baseline)
library(dplyr)
experiment_one <- all_data %>% filter(exp1==1)
baseline <- experiment_one$Baseline_Proportion_Gaze_to_Singer
plot(baseline)
hist(baseline)
hist(baseline)
hist(baseline)
hist(baseline)
hist(baseline)
hist(baseline)
hist(baseline)
hist(baseline)
hist(baseline)
library(pwr)
pwr.t.test(n=32,
d=.54,
sig.level = .05,
type = "one.sample",
alternative = "two.sided")
t.test(baseline, mu=.5)
mean(baseline)
sd(baseline)
ample_sd   <- (sd(baseline)
simulated_means <- length(1000)
sample_sd   <- sd(baseline)
simulated_means <- length(1000)
for(i in 1:1000){
simulated_means[i] <- mean(rnorm(32,.5, sample_sd))
}
hist(simulated_means)
sample_sd   <- sd(baseline)
simulated_means <- length(1000)
for(i in 1:1000){
simulated_means[i] <- mean(rnorm(32,.5, sample_sd))
}
hist(simulated_means)
install.packages("shiny")
